// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniUti.Database;

#nullable disable

namespace UniUti.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220528003451_UpdateModelsAndRelations")]
    partial class UpdateModelsAndRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CursoDisciplina", b =>
                {
                    b.Property<long>("CursosId")
                        .HasColumnType("bigint");

                    b.Property<long>("DisciplinasId")
                        .HasColumnType("bigint");

                    b.HasKey("CursosId", "DisciplinasId");

                    b.HasIndex("DisciplinasId");

                    b.ToTable("CursoDisciplina");
                });

            modelBuilder.Entity("CursoInstituicao", b =>
                {
                    b.Property<long>("CursosId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstituicoesId")
                        .HasColumnType("bigint");

                    b.HasKey("CursosId", "InstituicoesId");

                    b.HasIndex("InstituicoesId");

                    b.ToTable("CursoInstituicao");
                });

            modelBuilder.Entity("UniUti.Models.Curso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deletado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("cursos");
                });

            modelBuilder.Entity("UniUti.Models.Disciplina", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deletado");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("disciplinas");
                });

            modelBuilder.Entity("UniUti.Models.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cidade");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("estado");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("numero");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pais");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("rua");

                    b.HasKey("Id");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("UniUti.Models.Instituicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("celular");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deletado");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<long>("EnderecoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("instituicoes");
                });

            modelBuilder.Entity("UniUti.Models.Monitoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_solicitacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<long>("DisciplinaId")
                        .HasColumnType("bigint");

                    b.Property<long>("PrestadorId")
                        .HasColumnType("bigint");

                    b.Property<long>("SolicitanteId")
                        .HasColumnType("bigint");

                    b.Property<int>("StatusSolicitacaco")
                        .HasColumnType("int")
                        .HasColumnName("status_solicitacao");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("PrestadorId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("monitorias");
                });

            modelBuilder.Entity("UniUti.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("celular");

                    b.Property<long>("CursoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deletado");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<long>("InstituicaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<byte[]>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("senha_hash");

                    b.Property<byte[]>("SenhaSalt")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("senha_salt");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("InstituicaoId");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("CursoDisciplina", b =>
                {
                    b.HasOne("UniUti.Models.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniUti.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DisciplinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CursoInstituicao", b =>
                {
                    b.HasOne("UniUti.Models.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniUti.Models.Instituicao", null)
                        .WithMany()
                        .HasForeignKey("InstituicoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniUti.Models.Instituicao", b =>
                {
                    b.HasOne("UniUti.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("UniUti.Models.Monitoria", b =>
                {
                    b.HasOne("UniUti.Models.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniUti.Models.Usuario", "Prestador")
                        .WithMany()
                        .HasForeignKey("PrestadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniUti.Models.Usuario", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Prestador");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("UniUti.Models.Usuario", b =>
                {
                    b.HasOne("UniUti.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniUti.Models.Instituicao", "Instituicao")
                        .WithMany("Usuarios")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("UniUti.Models.Instituicao", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
